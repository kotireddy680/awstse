..
#
# this playbook is to setup first ec2 windows instance on aws cloud.
# 1) creates a custom security group
# 2) spins up new EC2 Instances
# 3) waits for ssh to become active on Istance
#4) prints the instance publicip and dns 
#

- hosts:localhost
  vars:
     # vars for ec2 creation
     win_ec2_sec_group: win_app_secgrp
     aws_region: us-east-1
     win_ec2_instance_type: t2.large
     win_ami_id: ami:id # win 2016 base
     ansible_password: tse@1234
     
   tasks:
# this task will create a new security group with required rules 
- name: Setting up Security/Firewall Group
ec2_group:
   name: "{{ win_ec2_sec_group }}"
   description: Rules Allowing Traffic on for RDP, WinRM and Http
  region: "{{ aws_region """
  rules:
     - proto: tcp
       from_port:80
       to_port: 80
       cidr_ip: 0.0.0.0/0
      - proto: tcp
from_port: 3389
to_port: 3389
cidr_ip: 0.0.0.0/0
       -Proto: tcp
from_port: 5986
to_port: 5986
cidr_ip: 0.0.0.0/0
      - proto: icmp
from_port: -1
to_port: -1
cidr_ip: 0.0.0.0/0
      rules_egress:
- proto: all
  cidr_ip: 0.0.0.0/0
  # this task spins a new ec2 windows instance 
  - name: provision an Ec2 windows Instance
  ec2:
region: "{{ aws_region }}"
instance_type: "{{ win_ec2_instance_type }}"
image: "{{ win_ami_id }}"
wait:yes
wait_timeout: 500
count: 1
instance_tags:
 Name: Win_2016_EC2
 Owner: tse
 monitoring:no
 group: "{{ win_ec2_sec_group }}"
# below userdata is very important, as we enable winrm on new server, also ser the Administrator password
       user_data: "{{ lookup( 'template', '/etc/ansible/ec2-windows/winrm-userdata.txt.j2') }}"
register: ec2_out

# wait for winrm to listen on port 5986
 - name: Wait for WinRM on all hosts
   wait_for:
port: 5986
host: "{{ item.public_ip }}"
timeout: 300
state: started
with_items: "{{ ec2_out.instances }}"

 # display the public dns and ip address
 - debug:
msg: "System {{ item.public_dns_name }} has public-ip {{ item.public_ip }}"
   with_items: "{{ ec2_out.instances }}"

